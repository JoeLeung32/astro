---
import "@fontsource-variable/noto-sans-hk"
import "@fontsource-variable/lora"
import AppLayout from "../../../layouts/AppLayout/AppLayout.astro"
import queryRegion from "./data"
const params = Astro.params
const {region} = params
const response = await new Promise((resolve) => {
    resolve(queryRegion(region!))
}) as any
const postcodes = response?.at(0)?.attributes?.place_location_postcodes?.data
const postcodesUIData =
    postcodes
        .sort((a: any, b: any) => a.attributes.name.localeCompare(b.attributes.name))
        .sort((a: any, b: any) => a.attributes.postcode - b.attributes.postcode)
const pageUrl = `/travelLog/${region}`
---
<AppLayout>
    <div slot="header"/>
    <main>
        <div class="page p-4">
            <h1 class="page--header text-2xl pb-3 mr">{region}</h1>
            <div class="page--grid grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5">
                {postcodesUIData && postcodesUIData.map(({attributes}: any) => {
                    return (
                            <div class="page--card block p-3 rounded shadow">
                                <a href=`${pageUrl}/${attributes.postcode}`
                                   class="page--card-postcode block text-xs font-bold tracking-widest">
                                    {attributes.postcode}
                                </a>
                                <a href=`${pageUrl}/${attributes.postcode}/${attributes.name}`
                                   class="page--card-name text-md font-medium">
                                    {attributes.name}
                                </a>
                            </div>
                    )
                })}
            </div>
        </div>
    </main>
    <div slot="footer"/>
</AppLayout>
<style>
    .page {
        &--header {
            font-family: "Lora Variable", sans-serif;
        }

        &--card {
            &-name {
                font-family: "Lora Variable", sans-serif;
            }
        }
    }
</style>
