---
import { Icon } from "astro-icon/components"
export const prerender = true
import { Icon } from "astro-icon/components"
import "@fontsource-variable/baloo-2"
import AppLayout from "@layouts/AppLayout/AppLayout.astro"
const { pathname } = Astro.url

import fetchApi from "@libs/strapi"
import type Place_Country from "@interface/place_country"
const countries = await fetchApi<Place_Country[]>({
	endpoint: "place-countries",
	wrappedByKey: "data",
	query: {
		// "populate[0]": "capitalRegion",
		"sort[0]": "name"
	}
})
---

<AppLayout>
	<div slot="header" />
	<main class="container mx-auto px-4">
		<h1>Travel</h1>
		<div class="cardboard">
			{countries.map((data) => (
				<div class="card" data-url={`${pathname}/${data.attributes.name}`}>
					<div class="card--nametag">
						<span class="block">
							{data.attributes.name}
						</span>
					</div>
					<div class="card--thumbnail">
						<svg width="480" height="320" />
						<div class="card--thumbnail-loading">
							<Icon name="mdi:loading" size={32} class="animate-spin" />
						</div>
						<picture>
							<source
								media="not all and (min-width: 768px)"
								srcset="https://picsum.photos/1024/768"
							/>
							<img src="https://picsum.photos/1024/768" />
						</picture>
					</div>
				</div>
			))}
		</div>
	</main>
	<div slot="footer" />
</AppLayout>

<script define:vars={{ pathname }}>
	if (document) {
		const cards = document.querySelectorAll(".card")
		cards.forEach(card => {
			card.addEventListener("click", function() {
				const url = this.dataset.url.replace("//", "/").toLowerCase()
				if (window) window.location.href = url
			})
		})
	}
</script>

<style>
    h1 {
        @apply text-4xl font-bold;
        @apply my-4;
    }

    main {
        font-family: "Baloo 2 Variable", sans-serif;
    }

    .cardboard {
        @apply grid grid-cols-1 md:grid-cols-2 gap-4;
        @apply mb-4;
    }

    .card {
        @apply border block rounded-xl cursor-pointer shadow;
        @apply grid grid-cols-2;
        grid-template-areas: "nametag thumbnail";

        &:nth-child(4n+1),
        &:nth-child(4n+2) {
            grid-template-areas: "thumbnail nametag";

            .card {
                &--thumbnail {
                    @apply rounded-xl rounded-r-none;
                }
            }
        }

        &--nametag {
            grid-area: nametag;
            @apply flex flex-wrap flex-col justify-center items-start;
            @apply text-xl px-6 py-4;

            > *:first-child {
                @apply line-clamp-1 font-bold;
            }
        }

        &--thumbnail {
            @apply rounded-xl rounded-l-none;
            @apply relative overflow-hidden;
            @apply bg-gray-100 shadow-inner;
            grid-area: thumbnail;
            aspect-ratio: 16/9;

            &-loading {
                @apply flex flex-nowrap justify-center items-center;
                @apply absolute top-0 left-0 z-0;
                @apply w-full h-full;
            }

            > svg,
            > picture > img {
                @apply block w-full h-full max-w-full max-h-full;
                @apply object-cover;
            }

            > picture {
                @apply absolute left-0 top-0 w-full h-full;
            }
        }

        @media not all and (min-width: 1024px) {

            &:nth-child(odd),
            &:nth-child(even) {
                @apply grid-cols-none;
                grid-template-rows: 1fr auto;
                grid-template-areas: "thumbnail" "nametag";

                .card {
                    &--thumbnail {
                        aspect-ratio: 16/9;
                        @apply rounded-xl rounded-b-none;
                    }
                }
            }
        }
    }
</style>
