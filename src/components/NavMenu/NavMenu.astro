---
import "@fontsource-variable/baloo-2"
import NavSection from "./NavSection.astro"
import type { NavItem } from "./data"
import navItemData from "./data"
import { Icon } from "astro-icon/components"
const navItem = navItemData as NavItem[]
---
<label for="menuToggle">
	<Icon name="mdi:menu" size={32} />
</label>
<input type="checkbox" id="menuToggle" value="false" autocomplete="off" />
<nav id="navMenu" class="ff-baloo">
	<ol>
		{navItem && navItem.map((item: any) => (
			<NavSection item={item} />
		))}
	</ol>
</nav>
<style>
    label[for="menuToggle"] {
        @apply inline-block cursor-pointer p-2;
        @apply md:hidden;
    }

    #menuToggle {
        @apply hidden;
    }

    #menuToggle + nav {
        @apply absolute left-0 z-10 md:max-w-xs;
        @apply hidden shadow w-full bg-white select-none;
        top: 48px;

        @apply md:flex md:shadow-none md:bg-transparent;
		@apply md:mx-4 md:min-w-full;

        @media screen(md) {
            top: 12px;

			> ol {
                @apply md:flex md:gap-2;
			}
        }
    }

    #menuToggle:checked + nav {
        @apply block md:flex;
    }
</style>
<script>
	const navItems = document.querySelectorAll("#navMenu .section > .section-item:not([data-child=\"no\"])")
	for (let idx = 0; idx <= navItems.length; idx++) {
		if (navItems[idx]) {
			navItems[idx].addEventListener("click", function() {
				const parentNode = this.parentNode
				const inActiveNodes = (itself: Element, nodeList: [Element]) => {
					for (let idx = 0; idx <= nodeList.length; idx++) {
						if (itself !== nodeList[idx]) {
							nodeList[idx]?.classList.remove("active")
						}
					}
				}
				inActiveNodes(parentNode, parentNode?.parentNode?.querySelectorAll(".section:is(.active)"))
				inActiveNodes(parentNode, parentNode?.querySelectorAll(".section:is(.active)"))
				parentNode?.classList.toggle("active")
			}, false)
		}
	}
</script>
